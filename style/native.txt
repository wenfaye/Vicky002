import React, { Component } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Image, Dimensions, TextInput } from 'react-native';
import { Network, UserInterface, UPTrackEvent} from '../../action/UPModules'
import { NavigationActions } from 'react-navigation'
import UPUtils from '../../util/UPUtils'

/****/
import BonusPresentResult from './BonusPresentResultPage';

const bonusIcon = require('../../img/iconfont_red_packet.png');
const arrowIcon = require('../../img/arrow_short.png');
const tipIcon = require('../../img/myhome_tip.png');

/****/
import {
    StyleSheet,
    Text,
    View,
    Image,
    Platform,
    Navigator,
    TouchableHighlight,
    TouchableOpacity,
    TouchableWithoutFeedback,
    Dimensions,
}from "react-native";

/****/
import AddMembersPage from './AddMembersPage'
import AddConfirmPage from './AddConfirmPage'
import {StackNavigator} from 'react-navigation'

/****/
import UPUtils from '../../util/UPUtils';


var params = {
            "tagId":this.props.navigation.state.params.item.tagId,
            "accepterPhone":this.props.navigation.state.params.item.accepterPhone,
            "imageId":this.props.navigation.state.params.item.imageId,
            "imageCode":this.props.navigation.state.params.item.imageCode,
        }

/****/
constructor(props) {
        super(props);

        if (this.props.navigation.state.params){

            this.showName = this.props.navigation.state.params.item.showName;
            this.iconUrl = this.props.navigation.state.params.item.iconUrl;
            this.tagId = this.props.navigation.state.params.item.tagId;
        }else {

            this.showName = '';
            this.iconUrl = '';
            this.tagId = '';
        }

/****/
 memberCell: {
        marginTop: 10,
        height: 168,
        width: ScreenWidth,
        flexDirection: 'column',
        backgroundColor: '#FFFFFF',
    },

alignSelf: 'center',
一般来说，使用flexDirection、alignItems和 justifyContent三个样式属性就已经能满足大多数布局需求。

var ScreenWidth = Dimensions.get('window').width;
var ScreenHeight = Dimensions.get('window').height;
var scale = ScreenWidth / 375;

    confirmButton: {
        marginTop: ScreenHeight - 333,
        width: ScreenWidth - 40,
        height: 44,
        alignSelf: 'center'
    }

/****/
<TextInput
                        ref="bonusInput"
                        style={styles.inputRight}
                        underlineColorAndroid='transparent'
                        placeholder={"请输入赠送红包金额"}
                        placeholderTextColor="#999"
                        maxLength={8}
                        onChangeText={(txt)=>{this.setState({bonusAmount:txt})}}
                    />

_touchPage(){
        this.refs.bonusInput.blur();
    }

/****/
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  }
});

/****/
// 红包记录按钮事件
    _openPage() {
        const { navigate } = this.props.navigation;
        navigate('PresentHistory', {
            title: '红包记录',
            familyRelationList: infoData,
        });
    }


/****/

        this.relationData = this.props.navigation.state.params.familyRelationList;
        this.iconUrl =  this.props.navigation.state.params.iconUrl;

                            const { navigate, state } = this.props.navigation;
                            navigate('BonusPresentResult', {
                                title: '赠红包',
                                // familyRelationList:this.relationData,
                                familyRelationList:{
                                    iconUrl:"family/husband.png",
                                    reverseAliasName: "王小花",
                                    showName: "妹妹",
                                    reverseUserPhone:"15102130000"
                                },
                                transUniqueId: res.data.transUniqueId,
                                parentKey: state.key
                            });

//BonusPresentResultPage.js
        this.relationData = this.props.navigation.state.params.familyRelationList;
        this.transUniqueId = this.props.navigation.state.params.transUniqueId;


/****/
constructor(props) {
    super(props);
    this.state = { showText: true };

    // 每1000毫秒对showText状态做一次取反操作
    setInterval(() => {
      this.setState(previousState => {
        return { showText: !previousState.showText };
      });
    }, 1000);
  }


/****/
InteractionManager.runAfterInteractions(() => {
            // this.view = this._getGridView();
            this.setState({drawListView: true});
        });

/****/
async _getFirstEnterFlag() {
        // 获取当前是否第一次进入我的家庭模块。
        let ret: bool = await UPWMBridgeDataManager.getBoolean("isFirstEnter", true);
        this.setState({isFirstEnter: ret});

    }

// 注意这个方法前面有async关键字
  async getMoviesFromApi() {
    try {
      // 注意这里的await语句，其所在的函数必须有async关键字声明
      let response = await fetch('https://facebook.github.io/react-native/movies.json');
      let responseJson = await response.json();
      return responseJson.movies;
    } catch(error) {
      console.error(error);
    }
  }

  /****/
   static navigationOptions = {
        title: '搜索',
        color: 'blue',
        backTitle:'返回',
        headerLeft:(
            <View>
            <TouchableOpacity onPress={()=> {
                BridgeUserInterface.RNNavPop('pop');
            }}>

                <Image
                    style={{left:15,height:20,width:22,resizeMode: 'stretch'}}
                    source={require('../../img/common_back_black.png')} />
            </TouchableOpacity>
            </View>
        )
    };

    static navigationOptions = {header: null};

    static navigationOptions = {
        gesturesEnabled:true,
    };